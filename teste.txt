openapi: 3.0.0
info:
  title: Api iara-loom
  description: 'Esta Api tem como objetivo o api gateway do iara-loom, abstraindo do usuario as conexoes com o maestro e facilitando conectando o cientista aos metadados da sua lista de features.'
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
externalDocs:
  description: Mais informações
  url: http://swagger.io
servers:
- url: https://iara-loom.swagger.io/v2
- url: http://iara-loom.swagger.io/v2
tags:
- name: entity
  description: Entidade que detem as features criada pela query.
  externalDocs:
    description: Mais informações
    url: http://swagger.io
- name: entities
  description: Entidades que trazem as features agrupadas por tema do negocio.
  externalDocs:
    description: Mais informações
    url: http://swagger.io
- name: artifacty
  description: Artefato que detem a query serializada em forma binaria
  externalDocs:
    description: Mais informações
    url: http://swagger.io
- name: artifacts
  description: Artefatos que sao criados pelo loom para a realizacao de querys e criaçao das tabelas de entidades.
  externalDocs:
    description: Mais informações
    url: http://swagger.io
paths:
  /entities:
    get:
      tags:
      - entities
      summary: Listar todas as entidades considerando os paramentos de filtro
      operationId: listentity
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Pet not found
          content: {}
        405:
          description: Validation exception
          content: {}
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-codegen-request-body-name: body
    post:
      tags:
      - entities
      summary: Adicionar nova entidade (tabela com varias features)
      operationId: addtentity
      requestBody:
        description: Criação de nova entidade, contendo as features construidas na query
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entities'
          application/xml:
            schema:
              $ref: '#/components/schemas/entities'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-codegen-request-body-name: body
  /entities/{id_entity}:
    get:
      tags:
      - entities
      summary: Achar entidade pelo id
      description: Retornar entidade pelo id e todos os detalhes
      operationId: getentityId
      parameters:
      - name: id_entity
        in: path
        description: Id da entidade
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entity'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Pet not found
          content: {}
      security:
      - api_key: []
    delete:
      tags:
      - entities
      summary: Deletar a entidade
      operationId: deleteentity
      parameters:
      - name: api_key
        in: header
        schema:
          type: string
      - name: id_entity
        in: path
        description: Id da Entidade para deletar
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Entidade not found
          content: {}
      security:
      - petstore_auth:
        - write:pets
        - read:pets
        
  ## /segunda Parte
  /artifacts:
    get:
      tags:
      - artifacts
      summary: Listar artefatos disponiveis para rodar querys
      operationId: artifactslist
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/artifacts'
            application/json:
              schema:
                $ref: '#/components/schemas/artifacts'
        400:
          description: Invalid Order
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - artifacts
      summary: Adicionar artefato para realizar job
      requestBody:
        description: Envio de arquivo serializado para realizacao de job 
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/artifacty'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/artifacty'
            application/json:
              schema:
                $ref: '#/components/schemas/artifacty'
        400:
          description: Invalid Order
          content: {}
      x-codegen-request-body-name: body
  /artifacts/{id_artifacty}:
    get:
      tags:
      - artifacts
      summary: Encontrar artefato pelo id 
      description: Deletar um artefato pelo id que não é mais necessario
      operationId: deleteartifactID
      parameters:
      - name: id_artifacty
        in: path
        description: ID of pet that needs to be fetched
        required: true
        schema:
          maximum: 10.0
          minimum: 1.0
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/artifacty'
            application/json:
              schema:
                $ref: '#/components/schemas/artifacty'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Order not found
          content: {}
    delete:
      tags:
      - artifacts
      summary: Deletar o artefato pelo id
      description: Deletar um artefato pelo id que esta disponivel 
      operationId: deleteartifactybyid
      parameters:
      - name: id_artifacty
        in: path
        description: ID of the order that needs to be deleted
        required: true
        schema:
          minimum: 1.0
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Order not found
          content: {}
          
components:
  schemas:
    entities:
      type: object
      properties:
        id:
          type: integer
          format: int64
        petId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          enum:
          - placed
          - approved
          - delivered
        complete:
          type: boolean
          default: false
      xml:
        name: Order
    entity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        petId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          enum:
          - placed
          - approved
          - delivered
        complete:
          type: boolean
          default: false
      xml:
        name: Order
    artifacts:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
    artifacty:
      type: object
      properties:
        id:
          type: integer
          format: int64
        petId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          enum:
          - placed
          - approved
          - delivered
        complete:
          type: boolean
          default: false
      xml:
        name: Order

  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://petstore.swagger.io/oauth/dialog
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
